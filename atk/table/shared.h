#include <view.H>
extern NO_DLL_EXPORT void spread_ScrollLogically(class spread *V,long tr, long lc, long br, long rc, struct rectangle *logical);
extern NO_DLL_EXPORT void IgnoreObserved(class table  *T);
extern NO_DLL_EXPORT void RemoveCellView(class table  *T,struct cell  *c,class view  *v);
extern NO_DLL_EXPORT void DestroyCell(class table  *T, struct cell  *oldcell);
extern NO_DLL_EXPORT void rangeLimit (class table  * T, Chunk  chunk);
extern NO_DLL_EXPORT void rcref (class table  * T, extended_double  *result, int      r , int      c , int      iftaped);
extern NO_DLL_EXPORT void MakeStandard(extended_double  *x, double  value);
extern NO_DLL_EXPORT void MakeBogus(extended_double  *x, const char  *message);
extern NO_DLL_EXPORT int isrange (extended_double  *x);
extern NO_DLL_EXPORT int     idate (int      y, int      m, int      d);
extern NO_DLL_EXPORT void enterfuns (void);
 
extern NO_DLL_EXPORT void  eval (class table  * T, extended_double  *result, int      r , int      c, const char    *input);
extern NO_DLL_EXPORT void enterfun (const char      *name, double  (*fptr)(), int      argc);
extern NO_DLL_EXPORT void syntaxError ();
extern NO_DLL_EXPORT class view * spread_FindSubview (class spread  * V, struct cell  * cell);
extern NO_DLL_EXPORT void ComputeRowSizes(class spread  *V);
extern NO_DLL_EXPORT long spread_Width(class spread  * V, int  i, int  j);
extern NO_DLL_EXPORT long spread_Height(class spread  * V, int  i, int  j);
extern NO_DLL_EXPORT int spread_WantHighlight(class spread  *V);
extern NO_DLL_EXPORT void spread_update_FullUpdate(class spread  * V, enum view::UpdateType  how, struct rectangle  *updateClipRect);
extern NO_DLL_EXPORT void spread_PartialUpdate(class spread  * V, enum view::UpdateType  how, struct rectangle  *updateClipRect);
extern NO_DLL_EXPORT void spread_InvertRectangle(class spread  * V, int  left , int  top , int  width , int  height);
extern NO_DLL_EXPORT void spread_ClearSelectionBox (class spread  * V );
extern NO_DLL_EXPORT void k_SetMessageState (class spread  * V, int  newstate);
extern NO_DLL_EXPORT void CopyChunk(Chunk  to, Chunk  from);
extern NO_DLL_EXPORT boolean CompareChunk(Chunk  to, Chunk  from);
extern NO_DLL_EXPORT void SetCurrentCell (class spread  * V, Chunk  chunk, boolean expose=TRUE);
extern NO_DLL_EXPORT void TellFormula (class spread  * V);
extern NO_DLL_EXPORT void GetFormula (class spread  * V, Chunk  chunk, char  **keybuff);
extern NO_DLL_EXPORT void k_TellUser (class spread  * V, const char    *s);
extern NO_DLL_EXPORT boolean k_AskUser (class spread  * V, const char  prompt[], const char  def[], char  buff[], int  n);
extern NO_DLL_EXPORT boolean k_AreYouSure (class spread  * V, const char  *why);
extern NO_DLL_EXPORT boolean k_WantToDiscard (class spread  * V);
extern NO_DLL_EXPORT void WriteTroff(class spread  * V, FILE  * f, const char  *processor, const char  *format, boolean toplevel);
extern NO_DLL_EXPORT void AddRows(class spread  * V, int  after , int  count);
extern NO_DLL_EXPORT void AddCols(class spread  * V, int  after , int  count);
extern NO_DLL_EXPORT void k_DefineKeys (class keymap  *mainmap, class keymap *readonlymap, struct ATKregistryEntry   *classinfo);
extern NO_DLL_EXPORT void DefineMenus (class menulist  *mainmenus, class keymap  * mainmap, class menulist *readonlymenus, class keymap *readonlymap, struct ATKregistryEntry   *classinfo);
extern NO_DLL_EXPORT void ResetCurrentCell (class spread  * V);
extern NO_DLL_EXPORT class view * MouseHit (class spread  * V, enum view::MouseAction  action, long  x , long  y, long  numberOfClicks		/* how should i use this?? */);
extern NO_DLL_EXPORT void WriteASCII (class table  * T, FILE  *f, Chunk  chunk, int  level);
extern NO_DLL_EXPORT class table * ReadASCII (class table  * T, FILE  *f);
extern NO_DLL_EXPORT void WriteCell (class table  * T, FILE  *f, struct cell  * cell, char  **buff, int  level);
extern NO_DLL_EXPORT void ReadCell(class table  *T, FILE  *f, char  *buff, char  **cpp, char  *cl, struct cell  *cell);
extern NO_DLL_EXPORT void spread_ClearSelectionBox (class spread  * V );
extern NO_DLL_EXPORT void InitializeGraphic(class spread  *V);

extern NO_DLL_EXPORT void spread_ComputeAnchorOffsets(class spread *V, struct rectangle *rect);
