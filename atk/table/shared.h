#include <view.H>
extern void spread_ScrollLogically(class spread *V,long tr, long lc, long br, long rc, struct rectangle *logical);
extern void IgnoreObserved(class table  *T);
extern void RemoveCellView(class table  *T,struct cell  *c,class view  *v);
extern void DestroyCell(register class table  *T, struct cell  *oldcell);
extern void rangeLimit (register class table  * T, Chunk  chunk);
extern void rcref (register class table  * T, register extended_double  *result, int      r , int      c , int      iftaped);
extern void MakeStandard(extended_double  *x, double  value);
extern void MakeBogus(extended_double  *x, char  *message);
extern int isrange (extended_double  *x);
extern int     idate (int      y, int      m, int      d);
extern void enterfuns ();
 
extern void  eval (register class table  * T, extended_double  *result, int      r , int      c, char    *input);
void enterfun (char      *name, double  (*fptr)(), int      argc);
extern void syntaxError ();
extern class view * spread_FindSubview (class spread  * V, register struct cell  * cell);
extern void ComputeRowSizes(register class spread  *V);
extern long spread_Width(class spread  * V, int  i, int  j);
extern long spread_Height(class spread  * V, int  i, int  j);
extern int spread_WantHighlight(class spread  *V);
extern void spread_update_FullUpdate(class spread  * V, enum view_UpdateType  how, struct rectangle  *updateClipRect);
extern void spread_PartialUpdate(class spread  * V, enum view_UpdateType  how, struct rectangle  *updateClipRect);
extern void spread_InvertRectangle(class spread  * V, int  left , int  top , int  width , int  height);
extern void spread_ClearSelectionBox (class spread  * V );
extern void k_SetMessageState (register class spread  * V, int  newstate);
extern void CopyChunk(Chunk  to, Chunk  from);
extern boolean CompareChunk(Chunk  to, Chunk  from);
extern void SetCurrentCell (register class spread  * V, register Chunk  chunk, boolean expose=TRUE);
extern void TellFormula (register class spread  * V);
extern void GetFormula (register class spread  * V, register Chunk  chunk, char  **keybuff);
extern void k_TellUser (register class spread  * V, char    *s);
extern boolean k_AskUser (register class spread  * V, char  prompt[], char  def[], char  buff[], int  n);
extern boolean k_AreYouSure (register class spread  * V, char  *why);
extern boolean k_WantToDiscard (register class spread  * V);
extern void WriteTroff(class spread  * V, FILE  * f, char  *processor, char  *format, boolean toplevel);
extern void AddRows(register class spread  * V, int  after , int  count);
extern void AddCols(register class spread  * V, int  after , int  count);
extern void k_DefineKeys (class keymap  *mainmap, class keymap *readonlymap, struct ATKregistryEntry   *classinfo);
extern void DefineMenus (class menulist  *mainmenus, class keymap  * mainmap, class menulist *readonlymenus, class keymap *readonlymap, struct ATKregistryEntry   *classinfo);
extern void ResetCurrentCell (register class spread  * V);
extern class view * MouseHit (register class spread  * V, enum view_MouseAction  action, long  x , long  y, long  numberOfClicks		/* how should i use this?? */);
extern void WriteASCII (register class table  * T, FILE  *f, Chunk  chunk, int  level);
extern class table * ReadASCII (register class table  * T, FILE  *f);
extern void WriteCell (register class table  * T, FILE  *f, struct cell  * cell, char  **buff, int  level);
extern void ReadCell(register class table  *T, FILE  *f, char  *buff, char  **cpp, char  *cl, struct cell  *cell);
extern void spread_ClearSelectionBox (class spread  * V );
extern void InitializeGraphic(class spread  *V);

