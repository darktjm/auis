/* ********************************************************************** *\
 *         Copyright IBM Corporation 1988,1991 - All Rights Reserved      *
 * 	Copyright Carnegie Mellon University 1993 - All Rights Reserved   *
 *        For full copyright information see:'andrew/config/COPYRITE'     *
\* ********************************************************************** */

/*
	$Disclaimer: 
* Permission to use, copy, modify, and distribute this software and its 
* documentation for any purpose and without fee is hereby granted, provided 
* that the above copyright notice appear in all copies and that both that 
* copyright notice and this permission notice appear in supporting 
* documentation, and that the name of IBM not be used in advertising or 
* publicity pertaining to distribution of the software without specific, 
* written prior permission. 
*                         
* THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD 
* TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF 
* MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL ANY COPYRIGHT 
* HOLDER BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
* DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, 
* DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE 
* OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION 
* WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
* 
*  $
*/



DEFINES = -DYYDEBUG

INTERPOBJS = interp.o gen.o dump.o nsearch.o  error.o  \
        nevent.o  nevent1.o call.o real.o rexf.o rules.o
NESSOBJS =  ness.o  ncompile.o   ${INTERPOBJS}

HFILES = ness.H nessview.H nessmark.H \
        nessm.H nessmv.H nessrunapp.H gentext.H
EXTRACLASSES=nessview nessmark nessm nessmv \
        nessrunapp gentext
OBJS = ${NESSOBJS} nesssym.o nessview.o nessmark.o \
        nessm.o  nessmv.o nessrunapp.o gentext.o


DependTarget(init)

all:: init
ness.o: ness.H
ness.H: nodeclass
ncompile.o: rules.H
ncompile.o: ness.tlc

DynamicMultiObjectWithExports(ness,$(EXTRACLASSES),$(OBJS),$(UTILLIB),$(DYNMATHLIB),)
InstallDynamicObjectWithExports(ness,$(EXTRACLASSES),$(FULLATKDLIBDIR))

/* Runapp(nessrun,-m runapp.o $(OBJS)) */
.SUFFIXES: .H .Hn
.Hn.H: 
	$(RM) $*.H
	./nodeclass $*.Hn
init:: nodeclass$(EXEEXT) ness.H  rules.C  ness.tlc

ProgramTarget(nodeclass, nodeclss.o, , )

InstallClassFiles($(HFILES))


Parser(rules, -d -r)

clean::
	rm -f ness.H

compile.o:  ness.tlc
ness.tlc: ness.tlx rules.C
	ExecuteFromDESTDIR (gentlex ness.tlx rules.C)


ATKTestProgram(gtest, gtest.o, ${UTILLIB}, , -r . -c gentext)
ATKTestProgram(nesst, nesst.o, ${UTILLIB},  -lm ${BSDLIB}, -r . -c ness)
ATKTestProgram(interpt, interpt.o, ${UTILLIB},    -lm ${BSDLIB}, -r . -c ness)
ATKTestProgram(nessmrkt, nessmrkt.o, ${UTILLIB},    -lm ${BSDLIB}, -r . -c ness)


InstallFile(mtmpl.n, ${INSTINCFLAGS}, ${DESTDIR}/lib/ness)
InstallFile(nesswarn.d, ${INSTMANFLAGS}, ${DESTDIR}/lib/ness)

CleanTarget(*.tab.* *.output index ness.H rules.C ness.tlc)
CleanTarget(nodeclass nesst)

checkin:	 *.C *.H Imakefile  mtmpl.n  rules.gra   ness.tlx    ness.Hn  \
        nesswarn.d    nodeclss.c 
	ci   -l  $?

InstallRunappAPP(nessrun)
