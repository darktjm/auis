\begindata{text,539080616}
\textdsversion{12}
\template{be2guide}
\define{example
menu:[Region~4,Example~12]
attr:[LeftMargin LeftMargin Inch 32768]
attr:[Justification LeftJustified Point 0]
attr:[Flags NoFill Int Set]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize PreviousFontSize Point -2]}
\define{global
}
\define{symbol

attr:[Flags IncludeBeginning Int Clear]
attr:[Flags IncludeEnd Int Clear]
attr:[FontFamily symbol Int 0]}
\define{symbola

attr:[Flags IncludeBeginning Int Clear]
attr:[Flags IncludeEnd Int Clear]
attr:[FontFamily symbola Int 0]}
\define{footnote

attr:[Flags OverBar Int Set]
attr:[Flags IncludeEnd Int Set]
attr:[Flags IncludeBeginning Int Clear]
attr:[FontSize PreviousFontSize Point -2]}
\define{sansserif
menu:[Font~1,Sans Serif~42]
attr:[FontFamily AndySans Int 0]}
\define{underline
menu:[Font~1,Underline~41]
attr:[Flags Underline Int Set]}
\define{strikethrough
menu:[Font~1,Strike Through~42]}
\define{changebar
menu:[Font~1,Change Bar~43]
attr:[Flags ChangeBar Int Set]}
\define{caption
menu:[Title~3,Caption~30]
attr:[Justification Centered Point 0]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]
attr:[Flags IncludeBeginning Int Set]
attr:[Flags IncludeEnd Int Clear]
attr:[FontFace Bold Int Set]}
\define{index
menu:[Title,Index~91]
attr:[FontFace Italic Int Set]}
\define{indexi
menu:[Title~3,InvisibleIndex~92]
attr:[Script PreviousScriptMovement Point -2]
attr:[Flags IncludeBeginning Int Clear]
attr:[Flags IncludeEnd Int Clear]
attr:[FontFace Italic Int Set]}
\define{verbatim
menu:[Region~4,Verbatim~15]
attr:[Justification LeftJustified Point 0]
attr:[Flags NoFill Int Set]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]
attr:[Flags TabsCharacters Int Set]
attr:[Flags IncludeBeginning Int Set]
attr:[Flags IncludeEnd Int Clear]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]}
\define{red
menu:[Color,Red]
attr:['color' 'Red']}
\define{yellow
menu:[Color,Yellow]
attr:['color' 'Yellow']}
\define{green
menu:[Color,Green]
attr:['color' 'Green']}
\define{cyan
menu:[Color,Cyan]
attr:['color' 'Cyan']}
\define{blue
menu:[Color,Blue]
attr:['color' 'Blue']}
\define{magenta
menu:[Color,Magenta]
attr:['color' 'Magenta']}
\define{itemize
}
\define{enumerate
menu:[Region~4,Enumerate~30]
attr:[LeftMargin LeftMargin Inch 32768]}
\define{excerptedcaption

attr:[LeftMargin LeftMargin Inch 32768]
attr:[RightMargin RightMargin Inch 32768]
attr:[FontFace Bold Int Set]
attr:[FontFace Italic Int Set]}
\define{literal
menu:[Region~4,Literal~62]
attr:[Flags PassThru Int Set]}
\define{black
menu:[Color,Black]
attr:['color' 'Black']}
\define{fixedtext
menu:[Region~4,Fixedtext]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{fixedindent
menu:[Region~4,Fixedindent]
attr:[LeftMargin LeftMargin Cm 83230]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{paramname
menu:[Font~1,Paramname]
attr:[FontFace Italic Int Set]}
\define{helptopic
menu:[Region,Helptopic]
attr:[FontFace Italic Int Set]
attr:[FontFace Bold Int Clear]}
\define{function
}
\define{keyword
}
\chapter{class AWidgetView Documentation}


\bold{	Base Classes:  \italic{view} \italic{observable, traced, ATK}

	Files: \typewriter{awidgetview.H, awidgetview.C}

	Can be instantiated.  Can be a base class.}


\smaller{\flushright{Author: Information Technology Center

Documenter:  W.J.Hansen}}


An AWidgetView object provides a view on an AWidget object.  Since an 
AWidget can represent many sorts of widgets, AWidgetView is a generalized 
driver.  When required to satisfy calls from a parent view, AWidgetView 
fetches resources from its dataobject and interprets them to perform the 
actions of a view.


The class \italic{\bold{view}} contains a pointer to an instance of the 
class \italic{\bold{graphic}}.  \italic{\bold{View}} exports a set of 
methods that allow the programmer to execute drawing operations using its 
associated \italic{\bold{graphic}} object. \




\section{Members of class \underline{AWidgetView}}


\bold{figure *GetCurrFig();}\leftindent{

Returns the current figure being displayed.}



\section{Overview of  AWidgetView}


An \italic{\bold{AwidgetView}} has as its dataobject an object of class 
\italic{\bold{AWidget}} or a class derived from \italic{\bold{AWidget}}. 
 For each view action the AWidgetView must take, it fetches slot values 
from its dataobject.  These slots are documented in awidget.doc.


View methods of class AWidgetView can be overriden in a derived class.  \




\section{Overrides}


AWidgetView overrides the following view methods:


General view methods


	view *GetApplicationLayer();

	void LinkTree(view *parent);

	void InitChildren();

	void FullUpdate(enum view_UpdateType type, \


		long left, long top, long width, long height);

	void Update();

	view * Hit(enum view_MouseAction action, long x, long y, long n);

	view_DSattributes DesiredSize(long width, long height, \


		enum view_DSpass pass, long *desiredWidth, long *desiredHeight) ;

	void WantUpdate(view *requestor);

	void ReceiveInputFocus();

	void LoseInputFocus();

	void ObservedChanged(observable *dobj, long status);


Recursive search methods


	boolean RecSearch(struct SearchPattern *pat, boolean toplevel);

	boolean RecSrchResume(struct SearchPattern *pat);

	boolean RecSrchReplace(class dataobject *text, long pos, long len);

	void RecSrchExpose(const struct rectangle &logical, \


		struct rectangle &hit);

	void WantExposure(view *child, struct rectangle *childrect);


Printing methods


	void Print(FILE *file, char *processor, char *finalFormat, \


			boolean topLevel);

	void *GetPSPrintInterface(char *printtype);

	void PrintPSDoc(FILE *outfile, long pagew, long pageh);

	void PrintPSRect(FILE *file, long logwidth, long logheight, \


			struct rectangle *visrect);



\begindata{bp,540372696}
Version 2
n 0
\enddata{bp,540372696}
\view{bpv,540372696,214,0,0}

Copyright 1995 Carnegie Mellon University.  All rights reserved.

\smaller{\smaller{$Disclaimer: 
# Permission to use, copy, modify, and distribute this software and its 
# documentation for any purpose and without fee is hereby granted, provided 
# that the above copyright notice appear in all copies and that both that 
# copyright notice and this permission notice appear in supporting 
# documentation, and that the name of IBM not be used in advertising or 
# publicity pertaining to distribution of the software without specific, 
# written prior permission. 
#                         
# THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD 
# TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF 
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL ANY COPYRIGHT 
# HOLDER BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, 
# DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE 
# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION 
# WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# 
#  $

}}

\enddata{text,539080616}
