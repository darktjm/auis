\begindata{text,538382016}
\textdsversion{12}
\template{prochelp}
\chapter{Procedure Table Listing for Lset/Adew}

\proclistentry{\procname{arbcon-create}(\proctype{object} \procparm{view})\
Create an Arbcon and pop it up in a new window if one does 
not already exist.}

\proclistentry{\procname{arbcon-copycon}(\proctype{object} \procparm{view})\
arbcon copycon \italic{FIXME:  Wow, what informative 
documentation!  I think this is supposed to copy an arbiter-managed 
view to a new window, including all insets.}}


The following are not available until after an arbcon has been created 
(i.e., just loading the class does not make them available):


\proclistentry{\procname{arbcon-add-object}(\proctype{object} \procparm{self})\
prompt for a new object view pair to add to the list\
Menu:  \procmenu{Arbcon}\procmenuwhere{~0}\procmenuwhere{,}\procmenu{Add Object}\procmenuwhere{~22}\
Use \procname{QueueAnswer} to provide object view pair name in Ness.}

\proclistentry{\procname{arbcon-add-valueview-list}(\proctype{object} \procparm{self})\
Bring up window of valueviews\
Menu:  \procmenu{Arbcon}\procmenuwhere{~0}\procmenuwhere{,}\procmenu{Init Value Window}\procmenuwhere{~23}}

\proclistentry{\procname{arbcon-chdir}(\proctype{object} \procparm{self})\
Change Directory\
Menu:  \procmenu{ADEW}\procmenuwhere{~1}\procmenuwhere{,}\procmenu{Change Directory}\procmenuwhere{~1}\
Use \procname{QueueAnswer} to provide directory name in Ness.}

\proclistentry{\procname{arbcon-copy-cel}(\proctype{object} \procparm{self})\
Copy the current cel\
Menu:  \procmenu{Arbcon}\procmenuwhere{~0}\procmenuwhere{,}\procmenu{Copy Cel}\procmenuwhere{~3}\
This requires a selected cel.  It is not generally possible to select a 
cel within Ness, so do not call this from Ness.}

\proclistentry{\procname{arbcon-copy-link}(\proctype{object} \procparm{self})\
Copy link to current cel\
Menu:  \procmenu{Arbcon}\procmenuwhere{~0}\procmenuwhere{,}\procmenu{Copy Link}\procmenuwhere{~2}\
This requires a selected cel.  It is not generally possible to select a 
cel within Ness, so do not call this from Ness.}

\proclistentry{\procname{arbcon-creatcon}(\proctype{object} \procparm{self})\
Create Controller\
Menu:  \procmenu{ADEW}\procmenuwhere{~1}\procmenuwhere{,}\procmenu{Create Controller}\procmenuwhere{~1}}

\proclistentry{\procname{arbcon-cut-cel}(\proctype{object} \procparm{self})\
Cut the current cel\
Menu:  \procmenu{Arbcon}\procmenuwhere{~0}\procmenuwhere{,}\procmenu{Cut Cel}\procmenuwhere{~10}\
This requires a selected cel.  It is not generally possible to select a 
cel within Ness, so do not call this from Ness.}

\proclistentry{\procname{arbcon-new-window}(\proctype{object} \procparm{self})\
prompt for a file for a new window\
Menu:  \procmenu{Arbcon}\procmenuwhere{~0}\procmenuwhere{,}\procmenu{New Window}\procmenuwhere{~20}\
Use \procname{QueueAnswer} to provide new file name in Ness.}

\proclistentry{\procname{arbcon-show-cels}(\proctype{object} \procparm{self})\
Show cel names\
Menu:  \procmenu{Arbcon}\procmenuwhere{~0}\procmenuwhere{,}\procmenu{Show Cels}\procmenuwhere{~21}}


\section{celview}


\proclistentry{\procname{celview-Init-Child}(\proctype{object} \procparm{self})\
Initialize Child\
celview,Init Child}

\proclistentry{\procname{celview-InsertFile}(\proctype{object} \procparm{self})\
\italic{Not documented}\
Menu:  \procmenu{celview}\procmenuwhere{,}\procmenu{Insert File}; 
\procmenu{Read Child}}

\proclistentry{\procname{celview-Paste}(\proctype{object} \procparm{self})\
\italic{Not documented}\
Menu:  \procmenu{celview}\procmenuwhere{,}\procmenu{Paste}; \procmenu{Paste Child}}

\proclistentry{\procname{celview-set-invisible}(\proctype{object} \procparm{self})\
Make celview invisible}

\proclistentry{\procname{celview-set-visible}(\proctype{object} \procparm{self})\
Make celview visible}


\section{cel}


\proclistentry{\procname{cel-set-invisible}(\proctype{object} \procparm{self})\
Make cel invisible}

\proclistentry{\procname{cel-set-visible}(\proctype{object} \procparm{self})\
Make cel visible}


\section{lsetview}


\proclistentry{\procname{lsetview-Insert-Object}(\proctype{object} \procparm{self})\
Set the object of a child view}

\proclistentry{\procname{lsetview-Destroy-Object}(\proctype{object} \procparm{self})\
Destroy the child view\
Bound to:  \prockey{Esc-d}}

\proclistentry{\procname{lsetview-Insert-value}(\proctype{object} \procparm{self})\
Set the value of a child view}

\proclistentry{\procname{lsetview-Insert-application}(\proctype{object} \procparm{self})\
Set the application of a child view\
Menu:  \procmenu{lset}\procmenuwhere{,}\procmenu{Set application}\procmenuwhere{~32}}

\proclistentry{\procname{lsetview-Insert-Cel}(\proctype{object} \procparm{self})\
Set the Cel of a child view\
Menu:  \procmenu{lset}\procmenuwhere{,}\procmenu{Set Cel}\procmenuwhere{~30}}

\proclistentry{\procname{lsetview-Paste}(\proctype{object} \procparm{self})\
Fill lset with contents of cut buffer\
lset,Paste~36}

\proclistentry{\procname{lsetview-Unsplit}(\proctype{object} \procparm{self})\
Unsplits parent lset\
Menu:  \procmenu{lset}\procmenuwhere{,}\procmenu{Unsplit Lset}\procmenuwhere{~40}}

\proclistentry{\procname{lsetview-Read-File}(\proctype{object} \procparm{self})\
Read a file into a child view\
Menu: \procmenu{lset}\procmenuwhere{,}\procmenu{Insert File}\procmenuwhere{~35}}

\proclistentry{\procname{lsetview-Split-Horz}(\proctype{object} \procparm{self})\
Split the lpair Horizontally\
Menu:  \procmenu{lset}\procmenuwhere{,}\procmenu{Split Horizontal}\procmenuwhere{~11}}

\proclistentry{\procname{lsetview-Split-Vert}(\proctype{object} \procparm{self})\
Split the lpair Vertically\
Menu:  \procmenu{lset}\procmenuwhere{,}\procmenu{Split Vertically}\procmenuwhere{~10}}


\section{page}


\proclistentry{\procname{pagev-next-page}(\proctype{object} \procparm{self})\
Changes the page to look at the next object\
Bound to:  \prockey{^X-^N}; Menu:  \procmenu{page}\procmenuwhere{~95}\procmenuwhere{,}\procmenu{Next Page}\procmenuwhere{~90}}

\proclistentry{\procname{pagev-paste}(\proctype{object} \procparm{self})\
Pastes a switchee from the cut-buffer into a new page\
Bound to:  \prockey{^X-5}; Menu:  \procmenu{page}\procmenuwhere{~95}\procmenuwhere{,}\procmenu{Paste}\procmenuwhere{~80}}

\proclistentry{\procname{pagev-SetCurrentView}(\proctype{object} \procparm{self}, \proctype{marker} \procparm{name})\
Switches to a page whose top-level cel has given 
\procparm{name}.}

\proclistentry{\procname{pagev-switch-object}(\proctype{object} \procparm{self}, \proctype{object} \procparm{swin})\
Switches to a given object, \procparm{swin}.  It is 
generally not possible to create the necesary object for \procparm{swin} 
within Ness; this is just used to generate direct switch menu entries 
as pages are added.  Do not call from Ness; use 
\procname{pagev-SetCurrentView} instead.}


\section{Related Topics}


\leftindent{\helptopic{procs}

\helptopic{adew}}


\begindata{bp,537558784}
\enddata{bp,537558784}
\view{bpv,537558784,1385,0,0}
Copyright 1992 Carnegie Mellon University and IBM.  All rights reserved.
\enddata{text,538382016}
