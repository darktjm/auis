Global initialization
(0,--):   reduce   0->1
		rule 2 produces non-terminal:  attributes
(1,FUNCTION):   reduce   1->13
		rule 9 produces non-terminal:  functype
(13,FUNCTION):   shift to state 28
(28,setID):   shift to state 34
(34,'('):   shift to state 58
(58,setID):   reduce   58->99
		rule 9 produces non-terminal:  functype
(99,setID):   shift to state 127
(127,--):   reduce   58->101
		rule 35 produces non-terminal:  nonEmptyParmList
(101,')'):   reduce   58->100
		rule 34 produces non-terminal:  parmList
(100,')'):   shift to state 128
(128,--):   reduce   128->138
		rule 38 produces non-terminal:  stmtList
(138,setID):   shift to state 38
(38,--):   reduce   138->90
		rule 94 produces non-terminal:  var
(90,":="):   shift to state 125
(125,setID):   shift to state 38
(38,--):   reduce   125->53
		rule 94 produces non-terminal:  var
(53,'('):   shift to state 78
(78,setID):   shift to state 38
(38,--):   reduce   78->53
		rule 94 produces non-terminal:  var
(53,')'):   reduce   78->51
		rule 87 produces non-terminal:  prim
(51,')'):   reduce   78->50
		rule 78 produces non-terminal:  lowexpr
(50,')'):   reduce   78->49
		rule 74 produces non-terminal:  mulexpr
(49,')'):   reduce   78->48
		rule 71 produces non-terminal:  sumexpr
(48,')'):   reduce   78->47
		rule 69 produces non-terminal:  midexpr
(47,')'):   reduce   78->112
		rule 65 produces non-terminal:  expr
(112,')'):   reduce   78->114
		rule 92 produces non-terminal:  argList
(114,')'):   reduce   78->113
		rule 90 produces non-terminal:  args
(113,')'):   shift to state 130
(130,--):   reduce   125->52
		rule 89 produces non-terminal:  funcCall
(52,--):   reduce   125->50
		rule 81 produces non-terminal:  lowexpr
(50,INTEGER):   reduce   125->49
		rule 74 produces non-terminal:  mulexpr
(49,INTEGER):   reduce   125->48
		rule 71 produces non-terminal:  sumexpr
(48,INTEGER):   reduce   125->47
		rule 69 produces non-terminal:  midexpr
(47,INTEGER):   reduce   125->135
		rule 65 produces non-terminal:  expr
(135,INTEGER):   reduce   138->87
		rule 41 produces non-terminal:  stmt
(87,INTEGER):   reduce   128->138
		rule 39 produces non-terminal:  stmtList
(138,INTEGER):   shift to state 5
(5,--):   reduce   138->86
		rule 6 produces non-terminal:  type
(86,setID):   shift to state 27
(27,--):   reduce   138->88
		rule 53 produces non-terminal:  declHead
(88,":="):   shift to state 123
(123,setINTCON):   shift to state 40
(40,--):   reduce   123->54
		rule 96 produces non-terminal:  constant
(54,--):   reduce   123->51
		rule 88 produces non-terminal:  prim
(51,--):   reduce   123->50
		rule 78 produces non-terminal:  lowexpr
(50,setID):   reduce   123->49
		rule 74 produces non-terminal:  mulexpr
(49,setID):   reduce   123->48
		rule 71 produces non-terminal:  sumexpr
(48,setID):   reduce   123->47
		rule 69 produces non-terminal:  midexpr
(47,setID):   reduce   123->134
		rule 65 produces non-terminal:  expr
(134,setID):   reduce   138->87
		rule 44 produces non-terminal:  stmt
(87,setID):   reduce   128->138
		rule 39 produces non-terminal:  stmtList
(138,setID):   shift to state 38
(38,--):   reduce   138->90
		rule 94 produces non-terminal:  var
(90,WHILE)*** Syntax error:  Syntax error
		pop state 90
		pop state 138
		pop state 128
		pop state 100
		pop state 58
		pop state 34
		pop state 28
		pop state 13
(2,WHILE) {err:3}
(2,setID) {err:3}
(2,"/=") {err:3}
(2,setSTRINGCON) {err:3}
(2,DO) {err:3}
(2,setID) {err:3}
(2,":=") {err:3}
(2,setID) {err:3}
(2,'+') {err:3}
(2,setINTCON) {err:3}
(2,setID) {err:3}
(2,":=") {err:3}
(2,setID) {err:3}
(2,'(') {err:3}
(2,setID) {err:3}
(2,'(') {err:3}
(2,setID) {err:3}
(2,')') {err:3}
(2,',') {err:3}
(2,setSTRINGCON) {err:3}
(2,')') {err:3}
(2,END) {err:3}
(2,WHILE) {err:3}
(2,END) {err:3}
(2,FUNCTION) {err:3}:   shift to state 17
(17,--) {err:2}:   reduce   1->14
		rule 22 produces non-terminal:  attrDecl
(14,--) {err:2}:   reduce   0->1
		rule 3 produces non-terminal:  attributes
(1,FUNCTION) {err:2}:   reduce   1->13
		rule 9 produces non-terminal:  functype
(13,FUNCTION) {err:2}:   shift to state 28
(28,setID) {err:1}:   shift to state 34
(34,'('):   shift to state 58
(58,setID):   reduce   58->99
		rule 9 produces non-terminal:  functype
(99,setID):   shift to state 127
(127,--):   reduce   58->101
		rule 35 produces non-terminal:  nonEmptyParmList
(101,')'):   reduce   58->100
		rule 34 produces non-terminal:  parmList
(100,')'):   shift to state 128
(128,--):   reduce   128->138
		rule 38 produces non-terminal:  stmtList
(138,MARKER):   shift to state 3
(3,--):   reduce   138->86
		rule 4 produces non-terminal:  type
(86,setID):   shift to state 27
(27,--):   reduce   138->88
		rule 53 produces non-terminal:  declHead
(88,setID):   reduce   88->124
		rule 54 produces non-terminal:  declIdList
(124,setID):   reduce   138->87
		rule 43 produces non-terminal:  stmt
(87,setID):   reduce   128->138
		rule 39 produces non-terminal:  stmtList
(138,setID):   shift to state 38
(38,--):   reduce   138->90
		rule 94 produces non-terminal:  var
(90,":="):   shift to state 125
(125,setID):   shift to state 38
(38,--):   reduce   125->53
		rule 94 produces non-terminal:  var
(53,'('):   shift to state 78
(78,setID):   shift to state 38
(38,--):   reduce   78->53
		rule 94 produces non-terminal:  var
(53,'('):   shift to state 78
(78,setID):   shift to state 38
(38,--):   reduce   78->53
		rule 94 produces non-terminal:  var
(53,','):   reduce   78->51
		rule 87 produces non-terminal:  prim
(51,','):   reduce   78->50
		rule 78 produces non-terminal:  lowexpr
(50,','):   reduce   78->49
		rule 74 produces non-terminal:  mulexpr
(49,','):   reduce   78->48
		rule 71 produces non-terminal:  sumexpr
(48,','):   reduce   78->47
		rule 69 produces non-terminal:  midexpr
(47,','):   reduce   78->112
		rule 65 produces non-terminal:  expr
(112,','):   reduce   78->114
		rule 92 produces non-terminal:  argList
(114,','):   shift to state 131
(131,setSTRINGCON):   shift to state 39
(39,--):   reduce   131->54
		rule 95 produces non-terminal:  constant
(54,--):   reduce   131->51
		rule 88 produces non-terminal:  prim
(51,--):   reduce   131->50
		rule 78 produces non-terminal:  lowexpr
(50,')'):   reduce   131->49
		rule 74 produces non-terminal:  mulexpr
(49,')'):   reduce   131->48
		rule 71 produces non-terminal:  sumexpr
(48,')'):   reduce   131->47
		rule 69 produces non-terminal:  midexpr
(47,')'):   reduce   131->140
		rule 65 produces non-terminal:  expr
(140,')'):   reduce   78->114
		rule 93 produces non-terminal:  argList
(114,')'):   reduce   78->113
		rule 90 produces non-terminal:  args
(113,')'):   shift to state 130
(130,--):   reduce   78->52
		rule 89 produces non-terminal:  funcCall
(52,--):   reduce   78->50
		rule 81 produces non-terminal:  lowexpr
(50,')'):   reduce   78->49
		rule 74 produces non-terminal:  mulexpr
(49,')'):   reduce   78->48
		rule 71 produces non-terminal:  sumexpr
(48,')'):   reduce   78->47
		rule 69 produces non-terminal:  midexpr
(47,')'):   reduce   78->112
		rule 65 produces non-terminal:  expr
(112,')'):   reduce   78->114
		rule 92 produces non-terminal:  argList
(114,')'):   reduce   78->113
		rule 90 produces non-terminal:  args
(113,')'):   shift to state 130
(130,--):   reduce   125->52
		rule 89 produces non-terminal:  funcCall
(52,--):   reduce   125->50
		rule 81 produces non-terminal:  lowexpr
(50,setID):   reduce   125->49
		rule 74 produces non-terminal:  mulexpr
(49,setID):   reduce   125->48
		rule 71 produces non-terminal:  sumexpr
(48,setID):   reduce   125->47
		rule 69 produces non-terminal:  midexpr
(47,setID):   reduce   125->135
		rule 65 produces non-terminal:  expr
(135,setID):   reduce   138->87
		rule 41 produces non-terminal:  stmt
(87,setID):   reduce   128->138
		rule 39 produces non-terminal:  stmtList
(138,setID):   shift to state 38
(38,--):   reduce   138->90
		rule 94 produces non-terminal:  var
(90,'('):   shift to state 78
(78,setSTRINGCON):   shift to state 39
(39,--):   reduce   78->54
		rule 95 produces non-terminal:  constant
(54,--):   reduce   78->51
		rule 88 produces non-terminal:  prim
(51,--):   reduce   78->50
		rule 78 produces non-terminal:  lowexpr
(50,'~'):   shift to state 77
(77,setID):   shift to state 38
(38,--):   reduce   77->53
		rule 94 produces non-terminal:  var
(53,'('):   shift to state 78
(78,setID):   shift to state 38
(38,--):   reduce   78->53
		rule 94 produces non-terminal:  var
(53,')'):   reduce   78->51
		rule 87 produces non-terminal:  prim
(51,')'):   reduce   78->50
		rule 78 produces non-terminal:  lowexpr
(50,')'):   reduce   78->49
		rule 74 produces non-terminal:  mulexpr
(49,')'):   reduce   78->48
		rule 71 produces non-terminal:  sumexpr
(48,')'):   reduce   78->47
		rule 69 produces non-terminal:  midexpr
(47,')'):   reduce   78->112
		rule 65 produces non-terminal:  expr
(112,')'):   reduce   78->114
		rule 92 produces non-terminal:  argList
(114,')'):   reduce   78->113
		rule 90 produces non-terminal:  args
(113,')'):   shift to state 130
(130,--):   reduce   77->52
		rule 89 produces non-terminal:  funcCall
(52,--):   reduce   77->111
		rule 81 produces non-terminal:  lowexpr
(111,--):   reduce   78->50
		rule 85 produces non-terminal:  lowexpr
(50,')'):   reduce   78->49
		rule 74 produces non-terminal:  mulexpr
(49,')'):   reduce   78->48
		rule 71 produces non-terminal:  sumexpr
(48,')'):   reduce   78->47
		rule 69 produces non-terminal:  midexpr
(47,')'):   reduce   78->112
		rule 65 produces non-terminal:  expr
(112,')'):   reduce   78->114
		rule 92 produces non-terminal:  argList
(114,')'):   reduce   78->113
		rule 90 produces non-terminal:  args
(113,')'):   shift to state 130
(130,--):   reduce   138->89
		rule 89 produces non-terminal:  funcCall
(89,--):   reduce   138->87
		rule 45 produces non-terminal:  stmt
(87,--):   reduce   128->138
		rule 39 produces non-terminal:  stmtList
(138,END):   shift to state 143
(143,FUNCTION):   shift to state 91
(91,--):   reduce   143->149
		rule 16 produces non-terminal:  endtag
(149,--):   reduce   128->137
		rule 37 produces non-terminal:  funcend
(137,--):   reduce   1->14
		rule 30 produces non-terminal:  attrDecl
(14,--):   reduce   0->1
		rule 3 produces non-terminal:  attributes
(1,$):   reduce   0->158
		rule 1 produces non-terminal:  script
(158,$):   shift to state 159
(159,$):   shift to state 160
tlex: @ 109 - illegal character
tlex: @ 110 - illegal character
tlex: @ 169 - illegal character
tlex: @ 173 - illegal character
tlex: @ 206 - Error ends number
parse_Run returns 23

29 at 0 length 8
19 at 9 length 4
52 at 13 length 1
19 at 14 length 4
53 at 18 length 1
23 at 48 length 6
19 at 55 length 1
51 at 57 length 2
20 at 60 length 7
19 at 69 length 3
19 at 73 length 1
51 at 75 length 2
21 at 78 length 3
30 at 82 length 3
29 at 86 length 8
21 at 99 length 3
19 at 103 length 4
32 at 109 length 1
32 at 110 length 1
54 at 111 length 1
51 at 113 length 2
13 at 116 length 1
15 at 129 length 1
20 at 131 length 17
20 at 148 length 7
21 at 156 length 3
22 at 160 length 7
32 at 169 length 1
51 at 170 length 2
32 at 173 length 1
51 at 174 length 2
6 at 176 length 1
51 at 177 length 2
22 at 180 length 7
22 at 188 length 6
21 at 195 length 10
21 at 206 length 4
21 at 210 length 1
52 at 212 length 1
52 at 213 length 1
19 at 215 length 7
Completed successfully
