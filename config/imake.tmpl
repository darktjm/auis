#ifndef XCOMM
#ifdef GNU_CPP_ENV
#define XCOMM \#
#else
#define XCOMM #
#endif
#endif
#include <aconcat.h>
XCOMM==================================================
XCOMM Copyright IBM Corporation 1988,1991 - All Rights Reserved
XCOMM Copyright Carnegie Mellon Univ. 1993,1996 - All Rights Reserved
XCOMM For full copyright information see:'andrew/doc/COPYRITE'     
XCOMM==================================================

XCOMM ##################################################
XCOMM This Makefile is automatically generated by 
XCOMM imake.  Do not modify it or you will lose your 
XCOMM changes when imake generates makefiles again.
XCOMM Ignore this message if you are not using imake.
XCOMM ##################################################

XCOMM $Disclaimer: 
XCOMM Permission to use, copy, modify, and distribute this software and its 
XCOMM documentation for any purpose and without fee is hereby granted, provided 
XCOMM that the above copyright notice appear in all copies and that both that 
XCOMM copyright notice and this permission notice appear in supporting 
XCOMM documentation, and that the name of IBM not be used in advertising or 
XCOMM publicity pertaining to distribution of the software without specific, 
XCOMM written prior permission. 
XCOMM                         
XCOMM THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD 
XCOMM TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF 
XCOMM MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL ANY COPYRIGHT 
XCOMM HOLDER BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
XCOMM DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, 
XCOMM DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE 
XCOMM OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION 
XCOMM WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
XCOMM 
XCOMM  $ 

#ifndef TOPDIR
#define TOPDIR .
#endif

all::

.SUFFIXES:
.SUFFIXES: .PS .o .snf .rtx .C .c .s .spp .y .l .ch .mss .bdf .fb .pcf .i

        ALL_INCLUDES = -I. $(LOCALINCLUDES) $(INCLUDES)
        ALL_DEFINES = $(STD_DEFINES) $(DEFINES)
        CPPC_DEFINES = $(STD_CPPC_DEFINES) $(DEFINES)
        CPPFLAGS = $(COMPILERFLAGS) $(CDEBUGFLAGS) $(CPPINCLUDES) $(ALL_INCLUDES) $(CPPC_DEFINES)
        CPPDYNFLAGS=$(CPPFLAGS)
        CFLAGS = $(COMPILERFLAGS) $(CDEBUGFLAGS) $(ALL_INCLUDES) $(ALL_DEFINES)
        TESTING_CFLAGS = -DTESTINGONLYTESTING $(CFLAGS)
        LDFLAGS = $(ALLAFSOBJFILE) $(RESOLVLIB) $(SYS_LIBRARIES) \
	$(SYSAUX_LIBRARIES) \
	$(LOCAL_SHARED_LIB_PATH) \
	$(SHARED_LIB_PATH) \
	$(DYN_LINK_LIB)
CPPLDFLAGS=$(LDFLAGS)
       DYNLDFLAGS=$(LDFLAGS)
       DYNPROGLDFLAGS=$(LDFLAGS)

XCOMM ##################################################
XCOMM The following comes from the platform.tmpl
XCOMM ##################################################
#include <platform.tmpl>
XCOMM ##################################################
XCOMM Back from platform.tmpl
XCOMM ##################################################


#ifdef ConstructMFLAGS
         MFLAGS = -$(MAKEFLAGS)
#endif /* ConstructMFLAGS */

INSTMODEFLAGS = -c -m
        INSTUIDFLAGS = $(INSTMODEFLAGS) 4755
#if defined(hpux) && (HP_OS >= 80)
        INSTDOFLAGS = $(INSTMODEFLAGS) 0555
        INSTLIBFLAGS = $(INSTMODEFLAGS) 0775
#else
        INSTLIBFLAGS = $(INSTMODEFLAGS) 0664
        INSTDOFLAGS = $(INSTMODEFLAGS) 0444
#endif
        INSTINCFLAGS = $(INSTMODEFLAGS) 0444
        INSTMANFLAGS = $(INSTMODEFLAGS) 0444
        INSTAPPFLAGS = $(INSTMODEFLAGS) 0444
        INSTPROGFLAGS = $(INSTMODEFLAGS) 0555
        INSTPROGRWFLAGS = $(INSTMODEFLAGS) 0755
        INSTCLASSPROGFLAGS = $(INSTPROGFLAGS)


MACROFILE = MacroIncludeFile

/* XXX - Need to make this conform to our idea of the macros in force. */
        IMAKE_CMD = $(IMAKE) -Timake.tmpl -I. -I$(IRULESRC) -s Makefile
        IMAKE_LIBCMD = $(IMAKE) -Timake.tmpl -I. -I$(IRULESRC) -s Makefile.lib -f Imakefile.lib
        IMAKE_RUNAPPCMD = $(IMAKE) -Timake.tmpl -I. -I$(IRULESRC) -s Makefile.run -f Imakefile.run
        IMAKE_DYNCMD = $(IMAKE) -Timake.tmpl -I. -I$(IRULESRC) -s Makefile.dyn -f Imakefile.dyn
        DOTDOTIMAKE_CMD = $(IMAKE) -Timake.tmpl -I. -I../$(IRULESRC) -s Makefile
MKPARSERCLASS = $(BASEDIR)/bin/mkparserclass
MKPARSER = $(BASEDIR)/bin/mkparser

XCOMM ##################################################
XCOMM The following comes from andrew.rls
XCOMM ##################################################
#include "andrew.rls"
XCOMM ##################################################
XCOMM Back from andrew.rls
XCOMM ##################################################

.c.o:
	$(RM) $@
	CC_RULE
.C.o:
	$(RM) $@
	CPPC_RULE
.i.o:
	$(RM) $@
	CPPC_RULE
.ii.o:
	$(RM) $@
	CPPC_RULE

all::
All:: all
Doc:: doc
doc:: install.doc
Aliases:: aliases
aliases:: install.alias
Install:: install
install:: all install.time doc
system: Install
World:: world
world:: depend install
Tidy:: tidy
Clean:: clean
clean:: tidy

dependInstall:: depend
	make DESTDIR=$(DESTDIR) install

dependAll:: depend
	make DESTDIR=$(DESTDIR) all

subMakefiles::
depend::
all::

GenericCleanTarget()
MakefileTarget()
TagsTarget()

XCOMM ##################################################
XCOMM The following comes from the local Imakefile
XCOMM ##################################################
#include INCLUDE_IMAKEFILE
XCOMM ##################################################
XCOMM Back from the local Imakefile
XCOMM ##################################################

all:: $(OBJS)

Makefiles:: Makefile

#ifdef IHaveSubdirs

MakeSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
DependMakeSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
InstallSubdirs($(SUBDIRS))
InstallDocSubdirs($(SUBDIRS))
InstallAliasSubdirs($(SUBDIRS))
DependInstallSubdirs($(SUBDIRS))
WorldInstallSubdirs($(SUBDIRS))
CleanSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
TidySubdirs($(SUBDIRS) $(EXTRASUBDIRS))
TagSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
MakefileSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
SubMakefileSubdirs($(SUBDIRS) $(EXTRASUBDIRS))

#endif /* IHaveSubdirs */

install.time::
	touch install.time

install.doc::
	touch install.doc

install.alias::

listdirs:
	@echo ${SUBDIRS}

depend::
	$(DEPENDSCRIPT) $(XMAKEDEPEND) \
		 "$(ALL_INCLUDES) $(EXTRADEPENDINCLUDES) "$(CPPDEPINCLUDES) "$(ALL_DEFINES)"


XCOMM #### DEPENDENCY LINE - DO NOT DELETE #####
