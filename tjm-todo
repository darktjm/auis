- valgrind access hit with dragon.zip - may be bug in XPutImage, or perhaps
  the way xgraphic abuses CreateImage() to create a template image and
  fills in the values manually
- lots of valgrind access hits with letter.tpl
  - parser::ParseNumber (317)
    There is no end sentinel on GetBuf() returns, so to fix, either:
    - all uses of GetBuf() must be checked to ensure they respect the length
      - for this case, parser::ParseNumber() needs to take a len parm
    - 1 extra byte needs to be allocated for simpletext strings to store a 0
    Note also that GetBuf() cuts off at the gap (and, in general, gap can't
    be handled w/o extra coding), so neither "fix" above is that great.
  - InterpretEvent (661)
  - InterpretEvent (662)
  - InterpretEvent (664)
    - all due to ness being deleted while being executed (or is it
      "while being referenced by an nevent node"? ).
  - celview::Hit (1510)
    - due to celview being deleted while its Hit() being executed.
      Need to defer deletes somehow to prevent this.  Perhaps have
      anything that calls ness or may be referred to by callers of ness
      check if currently executing ness; if so, defer deletion until
      ness finishes.  That's a lot of work for little benefit.  Another
      option would be to just crash more obviously when an in-progress
      script deletes itself or the item it's executing for.
- recompiling some ness code after error crashes (found playing w/ letter.tmpl)
  not yet easily reproducable
- need play module to either work or ignore (atk/music was dropped in 8.0)
- many 3d link buttons have text overlapping bottom edge
- pagedown eventually stops working (e.g. 2rtf) (and doesn't move cursor?)
- questionaire.msg ice cream question doesn't do anything
- org/treev: unfolded expands size, but doesn't shift tree to right
  if needed (i.e., left is severely cut off).  Also doesn't shift tree down
  for horizontal arrangement, but for some reason it allows moving scrollbar
  into negative area)
- org/bush/treev: kb navigation of nodes, printing (outline?)
- hyperlink: don't update label if label isn't default (or at least
  allow undo of label change)
- printing doesn't really work right:
  - crashes on cleanup (e.g. AndrewProgramming.ez)
  - wrong ps filename (maybe due to crash on cleanup): .n instead of .ps
  - TOC is a nasty mess
  - preview never starts up
- enable mouse scroll wheel
- add help-type hyperlink or other help button of some sort
  - maybe just make ez's help view help by default
- fix lack of updates when resizing windows
- fix contrib/tm to use termios, etc.
- fix console for modern Linux
- org doesn't mark entire doc as modified when doc inset is modified
- tests all apps, all insets, all docs, etc.
  - squash any crashes
  - run valgrind on as much as possible
  - fix example docs to document C++-style code
  - find out purpose of every file installed in auis, and document.
    - maybe switch to doxygen for API docs, since it's designed for C++
    - separate docs for C++ API, .atkinit/bind commands, ness, prefs, apps
    - get rid of all that stub documentation
- general cleanup:
  - remove all warnings
  - remove externs in c files
  - remove all statics in header files, if possible (gads, help.h is awful)
  - Unfortunately, there is no easy, portable way to avoid exporting
    symbols from a library which are only shared between members of
    the library.  Then again, I could probably just add gcc-specific
    methods if gcc is detected (like I did with UNUSED and format
    attributes).  Or, I could put the symbols in a namespace named
    after the library, which would at least alleviate namespace pollution.
  - constify pointers if possible
    It's usually better to make structures const by default and cast them to
    non-const when known to be malloc'd than the other way around
      e.g. ErrorGuts() -> only cast if explicit free flag given
    The only exception is when one statically allocated structure uses
    constants, but all else is malloc'd.
      e.g. filetype.C: mapEntry.fileExtension
  - remove type casts if possible
    There's almost never a good reason to cast pointers (well, in C++,
    you have to cast void * to the destination type, but that's it).
      gcc has no "flag all explicit casts" warning flag.
      -Wint-conversion (on by default)
      -Wbad-function-cast
      -Wcast-qual
      -Wcast-align
      -Wconversion
      -Wuseless-cast
      -Wsign-conversion
      -Wfloat-conversion
      -Wint-to-pointer-cast (on by default)
      -Wpointer-to-int-cast (on by default)
  - remove any unsupportable code (i.e., old UNIX, DOS, OS/2)
  - remove any functions which duplicate standard functions (e.g. strdup)
  - much of it is C++.  It might be a good idea to look for and remove
    Cisms where C++ does it differently (and presumably the same or better)
    (note that unlike some idiots, I don't consider cpp macros to be C-only)
- find out and possibly remove additional CMU/MIT-specific crap
  - remove all packages available elsewhere; e.g. jpeg, tiff
    (making sure there is no afs/atk "enhancement" first)
- build improvements
  - make it possible to build w/o simultaneous install
    It's possible to do "make Makefiles; make All", but some places depend
      on libs/headers from previous dirs to be installed
  - make it possible to use -k and -j (-k mostly works now)
  - fix corruption of flags (empty flags become -- eventually)
  - don't always regenerate deps, and clean up dep generation
  - maybe just switch to cmake
- fix UniqueID() and friends:
  - try not to renumber everything every modification; messes up svn diff
  - try to limit to 32 bits to retain compatibility with older systems
- pass unknown keys up the view hierarchy (e.g. pgup within inset often fails)

Long-term:
  - view/adjust styling boundaries (aka view source)?
  - more image::WriteNative overrides (at least 1 full-color lossless)
  - add support for png and/or imagemagick or some other wrapper library
    and make png default instead of gif
  - add code snippet inset for literate programming
  - make LaTeX the default output format
  - unicode support
  - truetype font support
  - make index entries insets
  - make entire beast literate
  - undo
  - freedesktop.org integration
  - move from included bison to standard bison instead of cleaning it up
  - look at removed mail-related stuff to see if anything useful got deleted
    (e.g. ez2ascii claims descendence from messages)
  - look at auis-6.3.1 to see if anything useful got dropped in 8.0
  - see if there is an atk repository in /afs/andrew.cmu.edu/ with more
    recent changes to 8.x
  - maybe give the sourceforge atk project another chance and try
    harder to see if there is anything worth salvaging
    - jdm (Journeyman's Development Manager)? undoumented crap
    - mrtools? undocumented crap
    - AIX-specific "ToolChat" support? whatever.
    - Yet Another Crappy Build System - ugh, forget it
    - REXX and perl code within ez?  Not worth it.  If I replace ness
      with anything, it'll be lua.
    - given the renaming and moving shit around, it's hard to tell if
      they actually fixed any bugs, and probably more effort to refind
      and refix the bugs than to try to figure out what changed.
  - maybe reformat into a slightly less ugly coding style.  I fixed a
    few bugs due to bad if/else indentation, and I hate the indentation
    style used in general.  However, unless I can find a tool to do this
    without too much aggravation (GNU indent ain't it), this will wait.
