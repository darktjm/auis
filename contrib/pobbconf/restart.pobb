#!/bin/csh -f
#**********************************************************************
#         Copyright IBM Corporation 1988,1991 - All Rights Reserved
#         For full copyright information see: 'andrew/config/COPYRITE'
#**********************************************************************
# $Disclaimer: 
# Permission to use, copy, modify, and distribute this software and its 
# documentation for any purpose and without fee is hereby granted, provided 
# that the above copyright notice appear in all copies and that both that 
# copyright notice and this permission notice appear in supporting 
# documentation, and that the name of IBM not be used in advertising or 
# publicity pertaining to distribution of the software without specific, 
# written prior permission. 
#                         
# THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD 
# TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF 
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL ANY COPYRIGHT 
# HOLDER BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, 
# DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE 
# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION 
# WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# 
#  $
%include pobbconfig.defs
#
# ?[POBBRunWarning]
# ?[POBBRunNotice]

%ifdef pobb_RunAMSDelivery

# For restarting oldsendmail -- reboot does it
if ( ?[PODoReboot] != 0 ) then
	set What="Reboot in 10"
else
	set What="Sendmail log-switch in 2"
endif
echo "<critical>(pid $$$$) $${What} minutes" >& /dev/console
sleep 60

set pid = `ps ax | egrep oldsendmail | egrep -v egrep`
if ($$#pid != 0) then
    set pid = $$pid[1]
    echo "<critical>Switching oldsendmail log; pid = $$pid" >& /dev/console
    (echo "<critical>kill -IOT $$pid"; kill -IOT $$pid) >& /dev/console
    sleep 50
# Send logs to bboard
    ?[SomeScriptDir]/postlog.cron
else
    echo "<critical>No oldsendmail daemon to signal" >& /dev/console
    sleep 60
endif

if ( ?[PODoReboot] != 0 ) then

	?[SmallLocalDir]/pobb.shutdown >& /dev/null
	sleep 180
	echo "<critical>Reboot in 5 minutes" >& /dev/console
	sleep 240
	echo "<critical>Reboot in 1 minute" >& /dev/console
	sleep 60
	sync
	sleep 10
	sync
	echo "<critical>Rebooting..." >& /dev/console
	sleep 2
	sync
	(reboot)
	/etc/reboot
	/bin2/reboot
endif

%endif pobb_RunAMSDelivery
