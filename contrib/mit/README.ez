\begindata{text,268913328}
\textdsversion{12}
\template{default}
\majorheading{MIT Contributed Andrew Software

February 13, 1992

}
Welcome to the world of MIT-authored software for use with ATK.

Alas, it is a rather chaotic world at the present time.  The goal in providing 
it is to make available a snapshot of work either in use or in development at 
MIT.


\chapter{Fully working stuff

}
The \bold{annot}, and \bold{util} directories are to be considered FULLY 
WORKING:


\description{\bold{annot}:	Annotation inset.  Looks like a footnote when 
printed, has two modes of display: closed it lookes like an icon of a sheet of 
paper.  Open, it is a scrolling text object.  We use it in some writing 
courses for teacher annotation of student papers.

}
\bold{util}: miscelaneous utilities:

\leftindent{\description{\bold{ez2ascii }:	command to intelligently convert 
ATK datastream to plain ASCII for display on character terminals.  Uses the 
same algorithm as messages.

\bold{ez2ps }:	convenience script to get a PostScript documents from an ATK 
documents.

\bold{header}:	Inset to put running headers and/or footers into a document.

\bold{popts }:	Object used to set printer options in a dialogue box.

\bold{vutils }:	Package of utility functions to hang off any view as either a 
key or a menu command.  Currently consists only of the vutils-fork-helpproc 
command which starts andrew help on command from any view.

\bold{compat }: 	Package of commands in use at MIT for improved compatibity 
between ez and GNU Emacs.

}}
\section{Scribe to ATK translation

}
The \bold{scribetext} directory contains a useful translator that takes a 
Scribe document and tries to convert it to an ATK datastream.  One extremely 
inconvenient architectural bug in the parser prevents the @newpage command 
from being properly parsed unless it is followed by an argument:


@newpage(3)		works

@newpage()		works

@newpage		does not work


If you can deal with editing your @newpage commands, the rest of the 
translation is very intelligent.  It is comparatively easy to add new 
additional functions for currently unsupported Scribe keywords.


Compiling scribetext is optional.  You must set SCRIBETEXT_ENV = 1 in your 
site.h file.


\section{Translation between ATK and RTF

}
The scribetext program served as the basis for the next two programs: 
\bold{rtf2} and \bold{2rtf}.  This project was cancelled just after the 
programs were written.  They contain bugs which are documented in the TODO 
list.  They are included in the hope that they will be useful to people in 
their broken state, and that a simple patch will be able to make them work 
correctly in the future.  There is also the hope that someone else will find 
the bugs and fix them so that the beleagured maintainer of ATK at MIT will not 
have to.


When they are working they are supposed to do the following:


A person familiar with Microsoft Word should be able to compose a text 
document there, and allow someone using EZ to edit it, and return it without 
losing the Microsoft Word style formatting.


A person familiar with EZ should be able to compose a text document ther, and 
allow someone to use Microsoft Word to edit it and return it without losing 
the EZ style formatting.


This is no mean feat since RTF and EZ support non-overlapping sets of 
formatting and do so in different styles.  The programs try to support with 
ATK formatting everything possible in Word, and to encapsulate as coded names 
of things any formatting that ATK does that would normally be lost in going to 
Microsoft Word.  So you really are supposed to be able to edit in EZ with 
formatting that Word would not normally allow, edit in Word and then recover 
the file in EZ without losing the EZ format directive.


Compiling the RTF translators is optional.  You must set RTF_ENV = 1 in your 
site.h file.

Share and Enjoy,

Bill Cattey

Beleagured maintainer of ATK at MIT

\enddata{text,268913328}
